{"version":3,"sources":["api.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","Chart","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","map","price","x","time_close","y","open","high","low","close","options","theme","mode","chart","height","title","text","align","xaxis","yaxis","tooltip","enabled","PriceView","styled","div","PriceViewItem","span","Price","console","log","quotes","USD","ath_price","toFixed","Container","Header","header","Title","h1","props","accentColor","Loader","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Btn","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","Helmet","name","to","pathname","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","Img","img","Coins","slice","coin","id","src","toLowerCase","Router","GlobalStyle","createGlobalStyle","bgColor","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.39abd24a.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IHistorical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n\r\n  // series: [{\r\n  //   name: \"Desktops\",\r\n  //   data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n  // }],\r\n\r\n  // series: [{\r\n  //   data: [{\r\n  //            x: new Date(1538778600000),\r\n  //            y: [6629.81, 6650.5, 6623.04, 6633.33]\r\n  //          },\r\n  //          {\r\n  //            x: new Date(1538780400000),\r\n  //            y: [6632.01, 6643.59, 6620, 6630.11]\r\n  //          },\r\n\r\n  // data?.map((price) => price.close),\r\n  // data: data?.map((price) => [price.open,price.high,price.low,price.close,]),\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading Chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              data: data?.map((price) => {\r\n                return {\r\n                  x: price.time_close,\r\n                  y: [price.open, price.high, price.low, price.close],\r\n                };\r\n              }),\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: \"light\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n            },\r\n            title: {\r\n              text: \"candleStick Chart\",\r\n              align: \"left\",\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinTickers } from \"../api\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface PriceProps {\r\n  coinId: string;\r\n}\r\n\r\nconst PriceView = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst PriceViewItem = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  height: 50px;\r\n\r\n  span: first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin: 5px 0px;\r\n  }\r\n`;\r\n\r\nfunction Price({ coinId }: PriceProps) {\r\n  const { isLoading, data } = useQuery(\r\n    [\"price\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      // refetchInterval: 10000,\r\n    }\r\n  );\r\n  console.log(data);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading Price...\"\r\n      ) : (\r\n        <>\r\n          <h1>Price</h1>\r\n          <PriceView>\r\n            <PriceViewItem>\r\n              <span>ATH-PRICE</span>\r\n              <span>${data?.quotes.USD.ath_price.toFixed(2)}</span>\r\n            </PriceViewItem>\r\n            <PriceViewItem>\r\n              <span>NOW-PRICE</span>\r\n              <span>${data?.quotes.USD.price.toFixed(2)}</span>\r\n            </PriceViewItem>\r\n          </PriceView>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface RouteState {\r\n  name: string;\r\n}\r\n\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auth;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  margin: 20px 0px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  span: first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Btn = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  width: 50px;\r\n  height: 30px;\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  span {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Link\r\n          to={{\r\n            pathname: `/`,\r\n          }}\r\n        >\r\n          <Btn>\r\n            <span>Back</span>\r\n          </Btn>\r\n        </Link>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>${tickersData?.quotes.USD.price.toFixed(2)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/:coinId/price`}>\r\n              <Price coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auth;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul`\r\n  margin-top: 40px;\r\n`;\r\n\r\nconst Coin = styled.li`\r\n  background-color: white;\r\n  color: {props => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 10px;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  margin: 20px 0px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 35px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>코인</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />{\" \"}\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  bgColor: \"#487eb0\",\r\n  textColor: \"#2C3A47\",\r\n  accentColor: \"#1e3799\",\r\n};\r\n"],"sourceRoot":""}